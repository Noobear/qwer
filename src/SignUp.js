import * as React from 'react';
import {Button, TextField, Grid, Container, Typography} from "@mui/material";
import { signup } from "./service/ApiService";
import ComboBox from "./ComboBox";
import RowRadioButtonsGroup from './RowRadioButtonsGroup'
import Copyright from "./Copyright";
import MaterialUIPickers from "./selectCalendar";
import DaumPost from "./DaumPost";
import {Axios} from "axios";

class SignUp extends React.Component {

    constructor(props) {
        super(props);
        this.handleSubmit = this.handleSubmit.bind(this);
    }

    handleSubmit(event) {
        event.preventDefault();
        // Ïò§Î∏åÏ†ùÌä∏ÏóêÏÑú formÏóê Ï†ÄÏû•Îêú Îç∞Ïù¥ÌÑ∞Î•º ÎßµÏùò ÌòïÌÉúÎ°ú Î∞îÍøîÏ§å.
        const data = new FormData(event.target);
        const realName = data.get("realName"); // Ïã§Î™Ö
        const email1 = data.get("email1"); // Ïù¥Î©îÏùº1
        const email2 = data.get("email2"); // Ïù¥Î©îÏùº2
        const username = email1 +"@"+ email2; // Ïù¥Î©îÏùº Ï∑®Ìï©
        const password = data.get("password"); // ÎπÑÎ∞ÄÎ≤àÌò∏
        const password_ch = data.get("password_ch"); // ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏
        const address = data.get("address"); // Ï£ºÏÜå
        const gender = data.get("gender"); // ÏÑ±Î≥Ñ
        const birthDay = data.get("birthDay"); // ÏÉùÏùº
        console.log("realName: "+realName); console.log("email: "+ username);  console.log("password: "+password);
        console.log("address: "+address); console.log("gender: "+gender); console.log("birthDay: "+birthDay);


        if (password === password_ch){
            // Axios
            //     .call('/join/admin', postData)
            //     .then(function (response) {
            //         console.log(response, 'ÏÑ±Í≥µ');
            //         // history.push('/login');
            //         document.location.href='/login';
            //     })
            //     .catch(function (err) {
            //         console.log(err);
            //     });
            alert('ÌöåÏõêÍ∞ÄÏûÖÏùÑ ÌôòÏòÅÌï©ÎãàÎã§. ' + realName + "Îãò.");
            window.location.href = "/" // ÎùºÏö∞ÌÑ∞Î°ú Î∞îÍæ∏Îäî ÏûëÏóÖ ÌïÑÏöî

            signup({
                realName:realName,password:password,
                username:username,address:address,
                gender:gender,birthDay:birthDay }).then(
                (response) => {
                    // Í≥ÑÏ†ï ÏÉùÏÑ± ÏÑ±Í≥µ Ïãú loginÌéòÏù¥ÏßÄÎ°ú Î¶¨ÎîîÎ†âÌä∏
                    return (
                        alert('ÌöåÏõêÍ∞ÄÏûÖÏùÑ ÌôòÏòÅÌï©ÎãàÎã§. ' + realName + "Îãò."),
                        window.location.href = "/" // ÎùºÏö∞ÌÑ∞Î°ú Î∞îÍæ∏Îäî ÏûëÏóÖ ÌïÑÏöî
                    )

                }
            );
        }
        else
        {alert("ÎπÑÎ∞ÄÎ≤àÌò∏ÏôÄ ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏Ïóê Í∞ôÏùÄ ÏïîÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.")}
    }

    state = {
        realName: '',
        name_ad: 'Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî!',
        password: '',
        password_ch: '',
        checkPassword: ' ÌïÑÏàò ÏûÖÎ†• Í∞íÏûÖÎãàÎã§!',
        advise:' ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!',
    };

    //üìù ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!
//ÎπÑÎ∞ÄÎ≤àÌò∏Îäî 8~16Ïûê ÏòÅÎ¨∏ ÎåÄ ÏÜåÎ¨∏Ïûê, Ïà´Ïûê, ÌäπÏàòÎ¨∏ÏûêÎ•º ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî.
    handleChange = (e) => {
        this.setState({
            [e.target.name]: e.target.value,
        });
        // ÌååÎùºÎØ∏ÌÑ∞Î°ú Î∞õÏùÄ event.target.nameÏù¥ name ÏïÑÎãê Í≤ΩÏö∞ÏóêÎßå handleCheckÌï®Ïàò Ïã§Ìñâ
        // setTimeoutÏúºÎ°ú ÎîúÎ†àÏù¥Î•º Ï§Ä Ïù¥Ïú†Îäî ÎîúÎ†àÏù¥Î•º Ï£ºÏßÄ ÏïäÏïòÏùÑ Í≤ΩÏö∞ setState Î≥ÄÍ≤ΩÎêú Í∞íÏù¥ handleCheckÏóêÏÑú Î∞îÎ°ú Î∞òÏòÅÎêòÏßÄ ÏïäÏùå
        if (e.target.name !== 'realName') {
            setTimeout(this.handleCheck, 1);
        }
    };

    handleCheck = () => {
        var RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[~!@#$%^&*()+|=])[A-Za-z\d~!@#$%^&*()+|=]{8,16}$/;
        const {realName, password, password_ch } = this.state;

        if (realName.length < 1){
            this.setState({
                name_ad: 'Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî!',
            });
        }else{
            this.setState({
                name_ad: '',
            });
        }
        // ÎπÑÎ∞ÄÎ≤àÌò∏ Î¨¥ÏûÖÎ†• ÏÉÅÌÉúÏùº ÎïåÏôÄ Îëò Ï§ëÏóê ÌïòÎÇòÏùò Í∞íÏù¥ ÏûÖÎ†• ÏÉÅÌÉúÍ∞Ä ÏïÑÎãêÎïå
        if (password.length < 1 || password_ch.length < 1) {
            this.setState({
                checkPassword: 'ÌïÑÏàò ÏûÖÎ†• Í∞íÏûÖÎãàÎã§!',
            });
            console.log('advise: '+ this.state.password);
            if (!RegExp.test(password)){
                this.setState({
                    advise: ' ÎπÑÎ∞ÄÎ≤àÌò∏Îäî 8~16Ïûê ÏòÅÎ¨∏ ÎåÄ ÏÜåÎ¨∏Ïûê, Ïà´Ïûê, ÌäπÏàòÎ¨∏ÏûêÎ•º ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî!',
                });
                if (RegExp.test(password)){
                    this.setState({
                        advise: '',
                    });
                }
            }else{
                this.setState({
                    advise: '',
                });
            }
        } else if (password === password_ch) { // ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä Í∞ôÎã§Î©¥ ÏùºÏπò
            this.setState({
                checkPassword: '',
            });
            console.log(password);
            if (!RegExp.test(password)){
                this.setState({
                    advise: ' ÎπÑÎ∞ÄÎ≤àÌò∏Îäî 8~16Ïûê ÏòÅÎ¨∏ ÎåÄ ÏÜåÎ¨∏Ïûê, Ïà´Ïûê, ÌäπÏàòÎ¨∏ÏûêÎ•º ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî!',
                });
            }else{
                this.setState({
                    advise: '',
                });
            }
        } else { // ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä Í∞ôÏßÄ ÏïäÎã§Î©¥ Î∂àÏùºÏπò
            this.setState({
                checkPassword: ' ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä Í∞ôÏßÄ ÏïäÏäµÎãàÎã§.',
            });
        }
    };

    render() {
        const {name_ad, realName, password, password_ch, checkPassword, advise} = this.state;
        return (
            <div className={'min-options'}>
            <Container maxWidth="xs"
                       style={{ paddingTop:"100px", paddingBottom:"200px"}}>
                <form noValidate onSubmit={this.handleSubmit}
                      style={{alignItems:"flex-start"}}>
                    <Grid container spacing={1.5}>
                        <Grid item xs={12}>
                            <Typography component="h1" variant="h5">
                                Í≥ÑÏ†ï ÏÉùÏÑ±
                            </Typography>
                        </Grid>
                        <Grid item xs={12}>
                            <div style={{fontSize:'18px', margin:"0"}}>
                                <TextField
                                variant="outlined"
                                required
                                fullWidth
                                id="realName"
                                label="Ïã§Î™Ö"
                                name="realName" //ÌïÑÏàòÍ∞í
                                onChange={this.handleChange} value={realName}
                                autoFocus
                            />{name_ad}
                            </div>
                        </Grid>
                        <Grid item xs={5.5}>
                            <TextField
                                style={{float: "left"}}
                                variant="outlined"
                                required
                                id="email1"
                                label="Ïù¥Î©îÏùº"
                                name="email1"
                            />
                        </Grid>
                        <Grid item xs={1}><h3>@</h3></Grid>
                        <Grid item xs={5.5}>
                            <ComboBox item xs={5.5}/>
                        </Grid>
                        <Grid></Grid>
                        <Grid item xs={12}>
                            <div style={{fontSize:'18px', margin:"0"}} >
                            <TextField
                                variant="outlined"
                                fullWidth
                                name="password"
                                label="ÎπÑÎ∞ÄÎ≤àÌò∏"
                                type="password"
                                id="password"
                                onChange={this.handleChange} value={password}
                            />{advise}
                            </div>
                        </Grid>
                        <Grid item xs={12}>
                            <div style={{fontSize:'18px', margin:"0"}} >
                            <TextField
                                variant="outlined"
                                fullWidth
                                name="password_ch"
                                label="ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏"
                                type="password"
                                id="password_ch"
                                onChange={this.handleChange} value={password_ch}
                            />
                            {checkPassword}<br/>
                            </div>
                        </Grid>
                        <Grid item xs={12}>
                            <TextField
                                variant="outlined"
                                required
                                fullWidth
                                id="address"
                                label="Ï£ºÏÜå"
                                name="address"
                            />
                        </Grid>
                        <Grid item xs={12}>
                            <DaumPost/>
                        </Grid>
                        <Grid item xs={12} style={{marginLeft:'10px'}}>
                            <RowRadioButtonsGroup
                                required
                                fullWidth
                                id="gender"
                                label="ÏÑ±Î≥Ñ"
                                name="gender"/>
                        </Grid>
                        <Grid item xs={12}>
                            <MaterialUIPickers
                                required
                                fullWidth
                                id="birthDay"
                                label="ÏÉùÏùº"
                                name="birthDay"/>
                        </Grid>
                        <Grid item xs={12}>
                            <Button
                                type="submit"
                                fullWidth
                                variant="contained"
                                color="primary"
                            >
                                Í≥ÑÏ†ï ÏÉùÏÑ±
                            </Button>
                        </Grid>
                    </Grid>
                </form>
            </Container>
        <footer align={"center"} style={{height:"10px"}}>
            <Copyright/>
        </footer>
        </div>
        );
    }
}

export default SignUp;